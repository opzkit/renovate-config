apiVersion: v1
kind: ServiceAccount
metadata:
  name: approvebot
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: approvebot
  name: approvebot
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: approvebot
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: approvebot
    spec:
      serviceAccountName: approvebot
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: "app.kubernetes.io/name"
                      operator: In
                      values:
                        - approvebot
                topologyKey: kubernetes.io/hostname
      containers:
        - name: approvebot
          env:
            - name: APP_ID
              value: '1328165'
            - name: NODE_ENV
              value: 'production'
            - name: PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: credentials
                  key: 'approver.privatekey.base64'
            - name: WEBHOOK_SECRET
              valueFrom:
                secretKeyRef:
                  name: credentials
                  key: WEBHOOK_SECRET
          readinessProbe:
            httpGet:
              path: /probot
              port: web
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 100m
              memory: 10Mi
            limits:
              cpu: 500m
              memory: 200Mi
          imagePullPolicy: IfNotPresent
          image: ghcr.io/renovatebot/renovate-approve-bot:main@sha256:6d8ca589a1bccc76ca8a7dd2637ad5f21c86b38d362fca4da0e3b47cf851f8f4
          ports:
            - name: web
              containerPort: 3000
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: approvebot
spec:
  ports:
    - port: 80
      name: web
      protocol: TCP
      targetPort: "web"
  selector:
    app.kubernetes.io/name: approvebot
  type: NodePort

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/group.name: default
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
    alb.ingress.kubernetes.io/healthcheck-path: '/probot'
    alb.ingress.kubernetes.io/load-balancer-attributes: access_logs.s3.enabled=true,access_logs.s3.bucket=929585105493-eu-west-1-k8s-alb-access-logs
  name: approvebot
spec:
  ingressClassName: "alb"
  rules:
    - host: approvebot-opzkit.k8s.sparetimecoders.com
      http:
        paths:
          - backend:
              service:
                name: approvebot
                port:
                  name: "web"
            pathType: ImplementationSpecific
  tls:
    - hosts:
        - approvebot-opzkit.k8s.sparetimecoders.com
